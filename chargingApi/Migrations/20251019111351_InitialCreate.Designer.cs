// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chargingApi.Data;

#nullable disable

namespace chargingApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251019111351_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("chargingApi.Models.ChargingStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChargingStations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConnectorType = "CCS",
                            ImageUrl = "url/img1.jpg",
                            LocationAddress = "Pune street one",
                            LocationLink = "https://maps.link/1",
                            PinCode = "10001",
                            StationName = "Pune 1",
                            Status = "Operational"
                        },
                        new
                        {
                            Id = 2,
                            ConnectorType = "Type 2",
                            ImageUrl = "url/img2.jpg",
                            LocationAddress = "pune street 2",
                            LocationLink = "https://maps.link/2",
                            PinCode = "20002",
                            StationName = "pune 2",
                            Status = "Maintenance"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
